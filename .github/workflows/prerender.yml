name: Node.js prerender CI

env:
  cache-name: cache-build
  context: ./

on:
  push:
    branches: [ main ]
    tags: '*'
  pull_request:
    branches: [ main ]

jobs:
  docker-build:
    name: Build docker
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=microlc/micro-lc-prerender
          VERSION=latest
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            VERSION=$(echo ${VERSION} | sed s/^v//)
          elif [[ $GITHUB_REF == refs/heads/main ]]; then
            VERSION=latest
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=image::${DOCKER_IMAGE}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.BOT_DOCKER_USERNAME }}
          password: ${{ secrets.BOT_DOCKER_TOKEN }}

      - name: Cache build
        uses: actions/cache@v2
        with:
          path: ${{ env.context }}build
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: '${{ env.context }}'
          push: true
          tags: ${{ steps.prep.outputs.tags }}
